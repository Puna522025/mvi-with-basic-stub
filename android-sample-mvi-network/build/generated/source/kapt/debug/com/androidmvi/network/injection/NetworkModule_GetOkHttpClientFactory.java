// Generated by Dagger (https://dagger.dev).
package com.androidmvi.network.injection;

import android.content.Context;
import android.content.SharedPreferences;
import com.androidmvi.spacex.network.injection.QaApiUrlConfig;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_GetOkHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<QaApiUrlConfig> qaApiUrlConfigProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<Context> contextProvider;

  public NetworkModule_GetOkHttpClientFactory(Provider<QaApiUrlConfig> qaApiUrlConfigProvider,
      Provider<SharedPreferences> sharedPreferencesProvider, Provider<Context> contextProvider) {
    this.qaApiUrlConfigProvider = qaApiUrlConfigProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return getOkHttpClient(qaApiUrlConfigProvider.get(), sharedPreferencesProvider.get(), contextProvider.get());
  }

  public static NetworkModule_GetOkHttpClientFactory create(
      Provider<QaApiUrlConfig> qaApiUrlConfigProvider,
      Provider<SharedPreferences> sharedPreferencesProvider, Provider<Context> contextProvider) {
    return new NetworkModule_GetOkHttpClientFactory(qaApiUrlConfigProvider, sharedPreferencesProvider, contextProvider);
  }

  public static OkHttpClient getOkHttpClient(QaApiUrlConfig qaApiUrlConfig,
      SharedPreferences sharedPreferences, Context context) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.getOkHttpClient(qaApiUrlConfig, sharedPreferences, context));
  }
}
